x = "Extensão Geográfica de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
View(ranidae_completo)
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = median(amplitude_lat))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = mean(amplitude_lat))
modelo_completo <- glm(prolonged ~ total_area_norm + (lat_max*(-1)) +
amplitude_lat,  family = binomial, data = ranidae_completo)
summary(modelo_completo)
step_ranidae <- step(modelo_completo, k = 3.841459)
export_summs(step_ranidae, scale = F, digits = 5)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = tolower(breeding_pattern),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_area = min(total_area),
max_area = max(total_area),
mediana = median(total_area))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = mean(amplitude_lat))
modelo_completo <- glm(prolonged ~ total_area_norm + lat_max +
amplitude_lat,  family = binomial, data = ranidae_completo)
library(PerformanceAnalytics)
library(jtools)
chart.Correlation((ranidae_completo[26:31]), histogram = TRUE, pch = "+")
step_ranidae <- step(modelo_completo, k = 3.841459)
summary(step_ranidae)
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_area = min(total_area),
max_area = max(total_area),
mediana = median(total_area))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = mean(amplitude_lat))
modelo_completo <- glm(prolonged ~ total_area_norm + lat_max +
amplitude_lat,  family = binomial, data = ranidae_completo)
summary(modelo_completo)
anova(modelo_completo)
step_ranidae <- step(modelo_completo, k = 3.841459)
summary(step_ranidae)
modelo_latmax <- glm(prolonged ~ lat_max, family = "binomial", data = ranidae_completo)
summary(modelo_latmax)
modelo2 <- glm(prolonged ~ amplitude_lat + centroide_lat, family = binomial, data = ranidae_completo)
summary(modelo2)
modelo6 <- glm(prolonged ~ amplitude_lat, family = binomial, data = ranidae_completo)
summary(modelo6)
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_bw()
ranidae_completo %>%
ggplot(aes(x = amplitude_lat, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Extensão Geográfica de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
ranidae_completo %>%
ggplot(aes(y = amplitude_lat, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Extensão Geográfica de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
ranidae_completo %>%
ggplot(aes(y = amplitude_lat, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Densidade",
y = "Amplitude Latitudinal") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
ranidae_completo %>%
ggplot(aes(y = lat_max, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Densidade",
y = "Amplitude Latitudinal") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = mean(amplitude_lat))
ranidae_completo %>%
ggplot(aes(y = lat_max, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Densidade",
y = "Latitude Máxima") +
scale_fill_manual(name = "Padrão Reprodutivo", labels =c("Explosivo", "Prolongado"),values = c("darkolivegreen","darkorange"))+
theme_classic()+
theme(legend.position = "bottom")
export_summs(modelo_latmax, scale = F, digits = 5)
stargazer(modelo_latmax, nobs = T, type = "text")
export_summs(modelo_latmax, scale = F, digits = 5)
1 / (1 + exp(-(-0.12845)))
exp(-0.12845)/1+exp(-0.12845)
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_bw()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = as.factor(prolonged)), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
geom_point(aes(x = lat_max, y = prolonged, color = "orange", size = 2) +
geom_point(aes(x = lat_max, y = prolonged, color = "orange", size = 2) +
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "orange", size = 2) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "darkorange", size = 4) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "darkorange", size = 2.5) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "darkorange", size = 2.5) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 1.5) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
ranidae_completo %>%
ggplot() +
geom_point(aes(x = lat_max, y = prolonged), color = "darkorange", size = 2.5) +
geom_smooth(aes(x = lat_max, y = prolonged),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkgray", size = 1.5) +
labs(x = "Latitude Máxima",
y = "Reprodução Prolongada") +
theme_classic()
library(tidyverse) # manipulação dos dados
library(ggplot2) # visualização gráfica
ranidae <- read.csv("data/processed/ranidae.csv")
ranges_ranidae <- read.csv("data/processed/ranges_ranidae.csv")
ranges_ranidae <- ranges_ranidae %>%
rename(species = especie)
library(tidyverse) # manipulação dos dados
library(ggplot2) # visualização gráfica
library(lme4) # modelos mistos
anuros <- read.csv("data/processed/dados_anuros_completo.csv")
anuros_reprod <- anuros %>%
# filtrando dados com espécies que tenham informação sobre padrões reprodutivos
filter(!is.na(breeding_pattern)) %>%
# filtrando dados com informação do range de ocorrência
filter(!is.na(total_area)) %>%
mutate(breeding_pattern = factor(breeding_pattern))
n_familia <- anuros_reprod %>%
group_by(family) %>%
summarise(n =  n())
# filtrando famílias com três ou mais espécies
n_familia <- n_familia %>%
filter(n >=3)
anuros_reprod <- anuros_reprod %>%
filter(family %in% n_familia$family)
# Número de espécies: 180
n_distinct(anuros_reprod$species)
# Número de famílias: 14
n_distinct(anuros_reprod$family)
# Estatística descritiva
anuros_reprod %>%
group_by(breeding_pattern) %>%
summarise(n_sp = n(),
média_area = mean(total_area),
mediana_area = median(total_area),
min_area = min(total_area),
max_area = max(total_area),
desviop_area = sd(total_area))
# area range original
anuros_reprod %>%
ggplot(aes(x = total_area, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Área total do Range de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(values = c("Explosive" = "green", "Prolonged" = "red"))+
theme_classic()
# aplicando uma transformação linear sem perder a proporção entre os valores
# normalização min-max
anuros_reprod <- anuros_reprod %>%
mutate(total_area_norm = ((total_area - min(total_area))/ (max(total_area) - min(total_area))),
sqrt.total_area = sqrt(total_area))
# area range original
anuros_reprod %>%
ggplot(aes(x = total_area, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Área total do Range de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(values = c("Explosive" = "green", "Prolonged" = "red"))+
theme_classic()
# area range normalizada
anuros_reprod %>%
ggplot(aes(x = total_area_norm, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Área total do Range de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(values = c("Explosive" = "green", "Prolonged" = "red"))+
theme_classic()
# area range normalizada
anuros_reprod %>%
ggplot(aes(x = sqrt.total_area, fill = breeding_pattern)) +
geom_density(alpha = 0.5)+
#geom_histogram(binwidth = 100000, position = "identity", alpha = 0.5) +
labs(title = "Sobreposição de Curvas de densidade",
x = "Área total do Range de Ocorrência (km²)",
y = "Densidade") +
scale_fill_manual(values = c("Explosive" = "green", "Prolonged" = "red"))+
theme_classic()
modelo1 <- glmer(breeding_pattern ~ sqrt.total_area + (1|family), family = binomial, data = anuros_reprod)
# aplicando uma transformação linear sem perder a proporção entre os valores
# normalização min-max
anuros_reprod <- anuros_reprod %>%
mutate(total_area_norm = ((total_area - min(total_area))/ (max(total_area) - min(total_area))),
sqrt.total_area = sqrt(total_area),
s.total_area = scale(total_area))
modelo1 <- glmer(breeding_pattern ~ s.total_area + (1|family), family = binomial, data = anuros_reprod)
library(car)
library(DHARMa)
simulateResiduals(modelo1, plot=T, n = 1000)
summary(modelo1)
modelo1 <- glmer(as.factor(breeding_pattern) ~ s.total_area + (1|family), family = binomial, data = anuros_reprod)
summary(modelo1)
modelo1 <- glmer(breeding_pattern ~ s.total_area + (1|family), family = binomial, data = anuros_reprod)
library(DHARMa)
simulateResiduals(modelo1, plot=T, n = 1000)
summary(modelo1)
# IMPORTANTDO OS DADOS -----------------------------------------------------------------------------------------
ranidae <- read.csv("data/processed/ranidae.csv")
ranges_ranidae <- read.csv("data/processed/ranges_ranidae.csv")
ranges_ranidae <- ranges_ranidae %>%
rename(species = especie)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = tolower(breeding_pattern),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_area = min(total_area),
max_area = max(total_area),
mediana = median(total_area))
ranidae_completo %>% group_by(breeding_pattern) %>%
summarise(n_species = n(),
min_lat = min(lat_min),
max_lat = max(lat_max),
mediana = mean(amplitude_lat))
# ANÁLISES ------------------------------------------------------------------------------------
names(ranidae_completo)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = tolower(breeding_pattern),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = scale(total_area)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min))
modelo1 <- glmer(breeding_pattern ~ s.total_area + lat_min + lat_max + amplitude_lat + centroide_lat)
modelo1 <- glm(breeding_pattern ~ s.total_area + lat_min + lat_max + amplitude_lat + centroide_lat,
family = binomial, data = ranidae_completo)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = scale(total_area)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min))
modelo1 <- glm(breeding_pattern ~ s.total_area + lat_min + lat_max + amplitude_lat + centroide_lat,
family = binomial, data = ranidae_completo)
library(car)
vif(modelo1)
chart.Correlation((ranidae_completo[26:31]), histogram = TRUE, pch = "+")
library(PerformanceAnalytics)
chart.Correlation((ranidae_completo[26:31]), histogram = TRUE, pch = "+")
modelo2 <- glm(breeding_pattern ~ s.total_area + lat_min + amplitude_lat + centroide_lat,
family = binomial, data = ranidae_completo)
vif(modelo2)
modelo3 <- glm(breeding_pattern ~ s.total_area + amplitude_lat + centroide_lat,
family = binomial, data = ranidae_completo)
vif(modelo3)
modelo4 <- glm(breeding_pattern ~ s.total_area + centroide_lat,
family = binomial, data = ranidae_completo)
vif(modelo4)
modelo5 <- glm(breeding_pattern ~ amplitude_lat + centroide_lat,
family = binomial, data = ranidae_completo)
vif(modelo5)
AIC(modelo4, modelo5)
library(DHARMa)
simulateResiduals(modelo4, plot =T, n = 1000)
simulateResiduals(modelo5, plot =T, n = 1000)
drop1(modelo5)
drop1(modelo5, test = "Chisq")
simulateResiduals(modelo3, plot =T, n = 1000)
anova(modelo3, modelo4, test = "F")
anova(modelo3, modelo4, test = "Chisq")
anova(modelo3, modelo5, test = "Chisq")
summary(modelo5)
drop1(modelo1, test="Chisq")
modelo6 <- glm(breeding_pattern ~ amplitude_lat + lat_max,
family = binomial, data = ranidae_completo)
vif(modelo6)
simulateResiduals(modelo6, plot =T, n = 1000)
AIC(modelo5, modelo6)
summary(modelo6)
drop1(modelo6, test = "Chisq")
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = scale(total_area)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min)) %>%
select(breeding_pattern, s.total_area,lat_min,lat_max,amplitude_lat,centroide_lat)
View(ranidae_completo)
View(ranges_ranidae)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = scale(total_area)) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min)) %>%
select(species, breeding_pattern, s.total_area,lat_min,lat_max,amplitude_lat,centroide_lat)
View(ranidae_completo)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = numeric(scale(total_area))) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min)) %>%
select(species, breeding_pattern, s.total_area,lat_min,lat_max,amplitude_lat,centroide_lat)
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = as.numeric(scale(total_area))) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min)) %>%
select(species, breeding_pattern, s.total_area,lat_min,lat_max,amplitude_lat,centroide_lat)
View(ranidae_completo)
View(ranidae_completo)
chart.Correlation((ranidae_completo[3:7]), histogram = TRUE, pch = "+")
ranidae_completo <- ranidae %>%
left_join(ranges_ranidae, by = "species") %>%
mutate(breeding_pattern = as.factor(tolower(breeding_pattern)),
prolonged = ifelse(breeding_pattern == "prolonged", 1,0),
s.total_area = as.numeric(scale(total_area))) %>%
mutate(lat_max = abs(lat_max),
lat_min = abs(lat_min)) %>%
select(species, breeding_pattern, total_area, s.total_area,lat_min,lat_max,amplitude_lat,centroide_lat)
chart.Correlation((ranidae_completo[4:7]), histogram = TRUE, pch = "+")
chart.Correlation((ranidae_completo[4:8]), histogram = TRUE, pch = "+")
modelo7 <- glm(breeding_pattern ~ s.total_area + centroide_lat,
family = binomial, data = ranidae_completo)
vif(modelo)
vif(modelo7)
simulateResiduals(modelo7, plot =T, n = 1000)
AIC(modelo6, modelo7)
summary(modelo7)
drop1(modelo7, test = "Chisq")
vif(modelo7)
modelo8 <- glm(breeding_pattern ~ s.total_area + lat_max,
family = binomial, data = ranidae_completo)
vif(modelo8)
## put (absolute) correlations on the upper panels,
## with size proportional to the correlations.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(ranidae_completo, upper.panel=panel.cor, diag.panel=panel.hist)
panel.hist <- function(x, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(usr[1:2], 0, 1.5) )
h <- hist(x, plot = FALSE)
breaks <- h$breaks; nB <- length(breaks)
y <- h$counts; y <- y/max(y)
rect(breaks[-nB], 0, breaks[-1], y, col = "cyan", ...)
}
## put (absolute) correlations on the upper panels,
## with size proportional to the correlations.
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- abs(cor(x, y))
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
pairs(ranidae_completo[,2:8], upper.panel=panel.cor, diag.panel=panel.hist)
